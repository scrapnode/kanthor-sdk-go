/*
Kanthor SDK API

SDK API

API version: 1.0
Contact: support@kanthorlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthenticatorAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticatorAccount{}

// AuthenticatorAccount struct for AuthenticatorAccount
type AuthenticatorAccount struct {
	Metadata *map[string]string `json:"metadata,omitempty"`
	Name *string `json:"name,omitempty"`
	Sub *string `json:"sub,omitempty"`
}

// NewAuthenticatorAccount instantiates a new AuthenticatorAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticatorAccount() *AuthenticatorAccount {
	this := AuthenticatorAccount{}
	return &this
}

// NewAuthenticatorAccountWithDefaults instantiates a new AuthenticatorAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticatorAccountWithDefaults() *AuthenticatorAccount {
	this := AuthenticatorAccount{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *AuthenticatorAccount) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatorAccount) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *AuthenticatorAccount) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *AuthenticatorAccount) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthenticatorAccount) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatorAccount) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthenticatorAccount) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthenticatorAccount) SetName(v string) {
	o.Name = &v
}

// GetSub returns the Sub field value if set, zero value otherwise.
func (o *AuthenticatorAccount) GetSub() string {
	if o == nil || IsNil(o.Sub) {
		var ret string
		return ret
	}
	return *o.Sub
}

// GetSubOk returns a tuple with the Sub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatorAccount) GetSubOk() (*string, bool) {
	if o == nil || IsNil(o.Sub) {
		return nil, false
	}
	return o.Sub, true
}

// HasSub returns a boolean if a field has been set.
func (o *AuthenticatorAccount) HasSub() bool {
	if o != nil && !IsNil(o.Sub) {
		return true
	}

	return false
}

// SetSub gets a reference to the given string and assigns it to the Sub field.
func (o *AuthenticatorAccount) SetSub(v string) {
	o.Sub = &v
}

func (o AuthenticatorAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticatorAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Sub) {
		toSerialize["sub"] = o.Sub
	}
	return toSerialize, nil
}

type NullableAuthenticatorAccount struct {
	value *AuthenticatorAccount
	isSet bool
}

func (v NullableAuthenticatorAccount) Get() *AuthenticatorAccount {
	return v.value
}

func (v *NullableAuthenticatorAccount) Set(val *AuthenticatorAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticatorAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticatorAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticatorAccount(val *AuthenticatorAccount) *NullableAuthenticatorAccount {
	return &NullableAuthenticatorAccount{value: val, isSet: true}
}

func (v NullableAuthenticatorAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticatorAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


